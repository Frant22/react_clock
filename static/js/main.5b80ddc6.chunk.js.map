{"version":3,"sources":["components/Clock.jsx","App.js","index.js"],"names":["Clock","state","time","Date","this","timerId","setInterval","setState","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","React","Component","App","clockName","isClockVisible","showClock","hideClock","generateName","Math","ceil","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,QAAUC,aAAY,WACzB,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAG1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,OAXP,gCAcE,SAAmBC,GACbA,EAAUC,OAASR,KAAKS,MAAMD,MAEhCJ,QAAQC,IAAR,qCACgCE,EAAUC,KAD1C,eACqDR,KAAKS,MAAMD,SAlBtE,kCAuBE,WACEE,cAAcV,KAAKC,WAxBvB,oBA2BE,WACE,OACE,4CAEG,IACAD,KAAKH,MAAMC,KAAKQ,0BAhCzB,GAA2BK,IAAMC,WCkDlBC,G,kNA/CbhB,MAAQ,CACNiB,UAAW,EACXC,gBAAgB,G,EAGlBC,UAAY,kBAAM,EAAKb,SAAS,CAAEY,gBAAgB,K,EAElDE,UAAY,kBAAM,EAAKd,SAAS,CAAEY,gBAAgB,K,EAElDG,aAAe,kBAAM,EAAKf,SACxB,CAAEW,UAAWK,KAAKC,KAAqB,IAAhBD,KAAKE,a,4CAG9B,WAAU,IAAD,EAC+BrB,KAAKH,MAAnCkB,EADD,EACCA,eAAgBD,EADjB,EACiBA,UAExB,OACE,yBAAKQ,UAAU,OACb,2CAECP,GAAkB,kBAAC,EAAD,CAAOP,KAAMM,IAEhC,4BACES,KAAK,SACLC,QAASxB,KAAKgB,aAFhB,QAOA,4BACEO,KAAK,SACLC,QAASxB,KAAKiB,aAFhB,QAOA,4BACEM,KAAK,SACLC,QAASxB,KAAKkB,gBAFhB,0B,GArCUP,IAAMC,YCDxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.5b80ddc6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    time: new Date(),\n  };\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ time: new Date() });\n\n      // eslint-disable-next-line\n      console.log(this.state.time.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(\n        `The Clock was renamed from ${prevProps.name} to ${this.props.name}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <p>\n        Current time :\n        {' '}\n        {this.state.time.toLocaleTimeString()}\n      </p>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { Clock } from './components/Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    clockName: 0,\n    isClockVisible: true,\n  }\n\n  showClock = () => this.setState({ isClockVisible: true });\n\n  hideClock = () => this.setState({ isClockVisible: false });\n\n  generateName = () => this.setState(\n    { clockName: Math.ceil(Math.random() * 1000) },\n  );\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {isClockVisible && <Clock name={clockName} />}\n\n        <button\n          type=\"button\"\n          onClick={this.showClock()}\n        >\n          SHOW\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.hideClock()}\n        >\n          HIDE\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.generateName()}\n        >\n          GENERATE NEW NAME\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}